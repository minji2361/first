<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis .org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kg.myapp.dao.IEmpRepository">
<resultMap id="empMap" type="com.kg.myapp.vo.EmpVO">
<result property="employeeId" column="employee_id" />
<result property="firstName" column="first_name" />
<result property="lastName" column="last_name" />
<result property="email" column="email" />
<result property="phoneNumber" column="phone_number" />
<result property="hireDate" column="hire_date" />
<result property="jobId" column="job_id" />
<result property="salary" column="salary" />
<result property="commissionPct" column="commission_pct" />
<result property="managerId" column="manager_id" />
<result property="departmentId" column="department_id" />
<result property="empPic" column="emp_pic" />
<result property="fileSize" column="file_size" />
</resultMap>

<select id="getEmpList" resultMap="empMap">
select * from employees
</select>

<select id="getEmpCount"  parameterType="int" resultType="int">
select count(*) from employees
<if test="deptId != null">
where department_id = #{deptId}
</if>
</select>

<select id="getEmpInfo" parameterType="int" resultType="com.kg.myapp.vo.EmpDetailVO">
select emp.employee_id as employeeId, first_name as firstName, last_name as lastName,
email, phone_number as phoneNumber, hire_date as hireDate, emp.job_id as jobId,
job_title as jobTitle, salary, commission_pct as commissionPct, emp.manager_id as managerId,
manager_name as managerName, emp.department_id as departmentId, department_name as departmentName, 
emp_pic as empPic, file_size as fileSize 
from employees emp left join jobs job on emp.job_id=job.job_id 
left join departments dept on emp.department_id=dept.department_id 
left join 
(select employee_id, first_name||' '||last_name as manager_name 
from employees where employee_id in 
(select distinct manager_id from employees)) man 
on emp.manager_id=man.employee_id where emp.employee_id=#{empId}
</select>

<select id="getAllDeptId" resultType="hashmap">
select department_id as "departmentId", department_name as "departmentName" from departments
</select>

<select id="getAllJobId" resultType="hashmap">
select job_id as "jobId", job_title as "jobTitle" from jobs
</select>

<select id="getAllManagerId" resultType="hashmap">
select employee_id as "managerId",
first_name||' '||last_name as "managerName"
from employees
where employee_id in (select distinct manager_id from employees)
</select>

<insert id="insertEmp" parameterType="com.kg.myapp.vo.EmpVO">
insert into employees
values (#{employeeId},#{firstName},#{lastName},#{email},#{phoneNumber}, 
SYSDATE,#{jobId},#{salary},#{commissionPct},#{managerId},#{departmentId}, 
#{empPic},#{fileSize})
</insert>

<select id="getEmpSearch" parameterType="string" resultMap="empMap"> 
select * from employees where first_name like ${name} or last_name like ${name}
</select>

<select id="getUpdateCount" parameterType="int" resultType="hashmap">
select (select count(*) from employees where manager_id=${employeeId}) as "empCount",
(select count(*) from departments where manager_id=${employeeId}) as "deptCount" from departments
</select>

<select id="idCheck" parameterType="int" resultType="hashmap">
select count(employee_id) from employees where employee_id=${employeeId}
</select>
</mapper>












